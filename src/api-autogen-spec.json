{
  "swagger": "2.0",
  "info": {
    "title": "Crowd Comic API",
    "description": "API endpoints for Crowd Comic. Keep in mind many of these endpoints are subject to change as the API continues to grow. Authentication is likely the first thing to change when the site implements logging in and session based authentication.",
    "contact": {
      "name": "",
      "email": "",
      "url": ""
    },
    "version": "1.0.0"
  },
  "host": "localhost:4000",
  "servers": [
    {
      "url": "http://localhost:4000/",
      "description": "Local server"
    },
    {
      "url": "<your live url here>",
      "description": "Live server"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Help Page",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/getImage/{id}": {
      "get": {
        "tags": [
          "image"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the link to the image",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "link-to-image"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/hook/{id}": {
      "get": {
        "tags": [
          "hook"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "A hook",
            "schema": {
              "$ref": "#/definitions/hook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find hook with id ${req.body.id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel/{id}": {
      "get": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "A panel",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "image": {
                  "type": "string",
                  "example": "path/to/image"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find panel with id ${req.body.id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel_sets/{id}/hooks": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/panel/{id}/hooks": {
      "get": {
        "tags": [
          "hook"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of hooks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hook"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find hooks under panel with id ${id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel_set/{id}/images": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/panel_set/{id}": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the panel set",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "author_id": {
                  "type": "string",
                  "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "a panel with the id of \"${id}\" cannot be found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel_sets/{ids}/panels": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "ids",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/panel_set/{panel_set_id}/{index}/panel": {
      "get": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "panel_set_id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "type": "number",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A panel",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "image": {
                  "type": "string",
                  "example": "path/to/image"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find panel with panel_set_id ${panel_set_id} and index of ${index}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User with id of \"${id}\" does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/session/{id}/user": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A user",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/user"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/user/{id}/panel_sets": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all panel sets from a user",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 0
                  },
                  "author_id": {
                    "type": "string",
                    "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User with an id of \"${id}\" does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/trunks": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "Get all trunk panel_sets",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 0
                  },
                  "author_id": {
                    "type": "string",
                    "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/error"
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Error occured, no trunks were found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tree/{id}": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of panel sets and their children"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "a panel with the id of \"${id}\" cannot be found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/session/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/publish": {
      "post": {
        "tags": [
          "publish"
        ],
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "image1",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file of the image for panel-1."
          },
          {
            "name": "image2",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file of the image for panel-2."
          },
          {
            "name": "image3",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "The file of the image for panel-3."
          },
          {
            "name": "data",
            "in": "formData",
            "required": true,
            "description": "author id and hook array",
            "type": "string"
          },
          {
            "name": "Data Template",
            "in": "body",
            "description": "Schema for the data",
            "schema": {
              "$ref": "#/definitions/publish"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/publishResponse"
            },
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createUser": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/userDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            },
            "description": "Authenticate a user. This is likely to change when when we start using sessions for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find user with provided email/password"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createSession": {
      "post": {
        "tags": [
          "session"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A new session created",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/changePassword": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            },
            "description": "Change the password for a user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully changed password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Response code is likely to change when we start using sessions to authenticate",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find user with provided email/password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/changeDisplayName": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "example@email.com"
                },
                "newDisplayName": {
                  "type": "string",
                  "example": "Jane Smith"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "display name successfully changed to Jane Smith"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Response code is likely to change when we start using sessions to authenticate",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find user with specified email/password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/updatePanel": {
      "post": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Update Panel",
            "schema": {
              "$ref": "#/definitions/panelUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An updated Panel",
            "schema": {
              "$ref": "#/definitions/panel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "definitions": {
    "userDefinition": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "example@example.com"
        },
        "password": {
          "type": "string",
          "example": "asdfASDF1234"
        },
        "display_name": {
          "type": "string",
          "example": "John Doe"
        }
      }
    },
    "userResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "example@example.com"
        },
        "display_name": {
          "type": "string",
          "example": "John Doe"
        },
        "id": {
          "type": "string",
          "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "string | string[]"
        }
      }
    },
    "hook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "position": {
          "type": "string",
          "example": "{ [{\"x\": 4, \"y\": 1}, {\"x\": 4, \"y\": 1}] }"
        },
        "current_panel_id": {
          "type": "number",
          "example": 0
        },
        "next_panel_set_id": {
          "type": "number",
          "example": 0
        }
      }
    },
    "publish": {
      "type": "object",
      "properties": {
        "author_id": {
          "type": "string",
          "example": "ad64a986-16c6-4f59-a944-3f80b0cbfb05"
        },
        "hooks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "position": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "x": {
                      "type": "number",
                      "example": 4
                    },
                    "y": {
                      "type": "number",
                      "example": 1
                    }
                  }
                }
              },
              "panel_index": {
                "type": "number",
                "example": 0
              }
            }
          }
        },
        "hook_id": {
          "type": "number",
          "example": 1
        }
      }
    },
    "panel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "image": {
          "type": "string",
          "example": "path/to/image"
        },
        "index": {
          "type": "number",
          "example": 0
        },
        "panel_set_id": {
          "type": "number",
          "example": 0
        }
      }
    },
    "panelArray": {
      "type": "object",
      "properties": {
        "panels": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 0
              },
              "image": {
                "type": "string",
                "example": "path/to/image"
              },
              "index": {
                "type": "number",
                "example": 0
              },
              "panel_set_id": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      }
    },
    "session": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        },
        "user-id": {
          "type": "string",
          "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-07-12T15:29:19.550Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-07-12T15:29:19.550Z"
        }
      }
    },
    "panelCreate": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "example": "sdfe34refergfer4trffs"
        },
        "panel_set_id": {
          "type": "number",
          "example": 0
        }
      }
    },
    "panelUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "image": {
          "type": "string",
          "example": "sdfe34refergfer4trffs"
        }
      }
    },
    "publishResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "string",
          "example": "Panel_Set successfully published."
        }
      }
    },
    "addSetToHookDefinition": {
      "type": "object",
      "properties": {
        "hook_id": {
          "type": "number",
          "example": 1
        },
        "panel_set_id": {
          "type": "number",
          "example": 1
        }
      }
    }
  }
}