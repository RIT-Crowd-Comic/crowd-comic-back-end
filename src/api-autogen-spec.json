{
  "swagger": "2.0",
  "info": {
    "title": "Crowd Comic API",
    "description": "API endpoints for Crowd Comic. Keep in mind many of these endpoints are subject to change as the API continues to grow. Authentication is likely the first thing to change when the site implements logging in and session based authentication.",
    "contact": {
      "name": "",
      "email": "",
      "url": ""
    },
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "Local server"
    },
    {
      "url": "<your live url here>",
      "description": "Live server"
    }
  ],
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/hook/{id}": {
      "get": {
        "tags": [
          "hook"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "A hook",
            "schema": {
              "$ref": "#/definitions/hook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find hook with id ${req.body.id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel/{id}": {
      "get": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "A panel",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "image": {
                  "type": "string",
                  "example": "path/to/image"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find panel with id ${req.body.id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "panel/{id}/hooks/": {
      "get": {
        "tags": [
          "hook"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of hooks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/hook"
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find hooks under panel with id ${id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel_set/{id}": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the panel set",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "author_id": {
                  "type": "string",
                  "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "a panel with the id of \"${id}\" cannot be found"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/panel_set/{id}/panels/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/panel_set/{panel_set_id}/{index}": {
      "get": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "panel_set_id",
            "in": "query",
            "required": true,
            "type": "number"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "number"
          },
          {
            "name": "index",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A panel",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "image": {
                  "type": "string",
                  "example": "path/to/image"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find panel with panel_set_id ${panel_set_id} and index of ${index}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}/": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User with id of \"${id}\" does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}/panels/": {
      "get": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "panel_set_id",
            "in": "query",
            "type": "number"
          },
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A panel",
            "schema": {
              "$ref": "#/definitions/panel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find panels under panelSet id ${panel_set_id}"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/getAllPanelSetsFromUser": {
      "get": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all panel sets from a user",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 0
                  },
                  "author_id": {
                    "type": "string",
                    "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User with an id of \"${id}\" does not exist"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createHook": {
      "post": {
        "tags": [
          "hook"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "position": {
                  "example": "any"
                },
                "current_panel_id": {
                  "example": "any"
                },
                "next_panel_set_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A hook",
            "schema": {
              "$ref": "#/definitions/hook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createPanel": {
      "post": {
        "tags": [
          "panel"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "image": {
                  "example": "any"
                },
                "panel_set_id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A newly created panel",
            "schema": {
              "$ref": "#/definitions/panel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createPanelSet": {
      "post": {
        "tags": [
          "panel-set"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "author_id": {
                  "example": "any"
                }
              }
            },
            "description": "Create a new panel set"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the new panel set",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 0
                },
                "author_id": {
                  "type": "string",
                  "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/createUser": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Create a new user",
            "schema": {
              "$ref": "#/definitions/userDefinition"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            },
            "description": "Authenticate a user. This is likely to change when when we start using sessions for authentication."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/userResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find user with provided email/password"
                }
              },
              "xml": {
                "name": "main"
              }
            },
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/changePassword": {
      "post": {
        "tags": [
          "user"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            },
            "description": "Change the password for a user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Successfully changed password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Response code is likely to change when we start using sessions to authenticate",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "could not find user with provided email/password"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/changeDisplayName": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/updatePanel": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                },
                "image": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/addSetToHook": {
      "patch": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "definitions": {
    "userDefinition": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "example@example.com"
        },
        "password": {
          "type": "string",
          "example": "asdfASDF1234"
        },
        "display_name": {
          "type": "string",
          "example": "John Doe"
        }
      }
    },
    "userResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "example@example.com"
        },
        "display_name": {
          "type": "string",
          "example": "John Doe"
        },
        "id": {
          "type": "string",
          "example": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        }
      }
    },
    "error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "string | string[]"
        }
      }
    },
    "hook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "position": {
          "type": "array",
          "example": [
            0,
            0
          ],
          "items": {
            "type": "number"
          }
        },
        "current_panel_id": {
          "type": "number",
          "example": 0
        },
        "next_panel_set_id": {
          "type": "number",
          "example": 0
        }
      }
    },
    "panel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 0
        },
        "image": {
          "type": "string",
          "example": "path/to/image"
        },
        "index": {
          "type": "number",
          "example": 0
        },
        "panel_set_id": {
          "type": "number",
          "example": 0
        }
      }
    }
  }
}